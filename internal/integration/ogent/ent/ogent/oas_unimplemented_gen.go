// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateAllTypes implements createAllTypes operation.
//
// Creates a new AllTypes and persists it to storage.
//
// POST /all-types
func (UnimplementedHandler) CreateAllTypes(ctx context.Context, req *CreateAllTypesReq) (r CreateAllTypesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateCategory implements createCategory operation.
//
// Creates a new Category and persists it to storage.
//
// POST /categories
func (UnimplementedHandler) CreateCategory(ctx context.Context, req *CreateCategoryReq) (r CreateCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateHat implements createHat operation.
//
// Creates a new Hat and persists it to storage.
//
// POST /hats
func (UnimplementedHandler) CreateHat(ctx context.Context, req *CreateHatReq) (r CreateHatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreatePet implements createPet operation.
//
// Creates a new Pet and persists it to storage.
//
// POST /pets
func (UnimplementedHandler) CreatePet(ctx context.Context, req *CreatePetReq) (r CreatePetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateUser implements createUser operation.
//
// Creates a new User and persists it to storage.
//
// POST /users
func (UnimplementedHandler) CreateUser(ctx context.Context, req *CreateUserReq) (r CreateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteAllTypes implements deleteAllTypes operation.
//
// Deletes the AllTypes with the requested ID.
//
// DELETE /all-types/{id}
func (UnimplementedHandler) DeleteAllTypes(ctx context.Context, params DeleteAllTypesParams) (r DeleteAllTypesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteCategory implements deleteCategory operation.
//
// Deletes the Category with the requested ID.
//
// DELETE /categories/{id}
func (UnimplementedHandler) DeleteCategory(ctx context.Context, params DeleteCategoryParams) (r DeleteCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteHat implements deleteHat operation.
//
// Deletes the Hat with the requested ID.
//
// DELETE /hats/{id}
func (UnimplementedHandler) DeleteHat(ctx context.Context, params DeleteHatParams) (r DeleteHatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeletePet implements deletePet operation.
//
// Deletes the Pet with the requested ID.
//
// DELETE /pets/{id}
func (UnimplementedHandler) DeletePet(ctx context.Context, params DeletePetParams) (r DeletePetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteUser implements deleteUser operation.
//
// Deletes the User with the requested ID.
//
// DELETE /users/{id}
func (UnimplementedHandler) DeleteUser(ctx context.Context, params DeleteUserParams) (r DeleteUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListAllTypes implements listAllTypes operation.
//
// List AllTypes.
//
// GET /all-types
func (UnimplementedHandler) ListAllTypes(ctx context.Context, params ListAllTypesParams) (r ListAllTypesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListCategory implements listCategory operation.
//
// List Categories.
//
// GET /categories
func (UnimplementedHandler) ListCategory(ctx context.Context, params ListCategoryParams) (r ListCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListCategoryPets implements listCategoryPets operation.
//
// List attached Pets.
//
// GET /categories/{id}/pets
func (UnimplementedHandler) ListCategoryPets(ctx context.Context, params ListCategoryPetsParams) (r ListCategoryPetsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListHat implements listHat operation.
//
// List Hats.
//
// GET /hats
func (UnimplementedHandler) ListHat(ctx context.Context, params ListHatParams) (r ListHatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPet implements listPet operation.
//
// List Pets.
//
// GET /pets
func (UnimplementedHandler) ListPet(ctx context.Context, params ListPetParams) (r ListPetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPetCategories implements listPetCategories operation.
//
// List attached Categories.
//
// GET /pets/{id}/categories
func (UnimplementedHandler) ListPetCategories(ctx context.Context, params ListPetCategoriesParams) (r ListPetCategoriesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPetFriends implements listPetFriends operation.
//
// List attached Friends.
//
// GET /pets/{id}/friends
func (UnimplementedHandler) ListPetFriends(ctx context.Context, params ListPetFriendsParams) (r ListPetFriendsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPetRescuer implements listPetRescuer operation.
//
// List attached Rescuers.
//
// GET /pets/{id}/rescuer
func (UnimplementedHandler) ListPetRescuer(ctx context.Context, params ListPetRescuerParams) (r ListPetRescuerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUser implements listUser operation.
//
// List Users.
//
// GET /users
func (UnimplementedHandler) ListUser(ctx context.Context, params ListUserParams) (r ListUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserAnimalsSaved implements listUserAnimalsSaved operation.
//
// List attached AnimalsSaveds.
//
// GET /users/{id}/animals-saved
func (UnimplementedHandler) ListUserAnimalsSaved(ctx context.Context, params ListUserAnimalsSavedParams) (r ListUserAnimalsSavedRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserPets implements listUserPets operation.
//
// List attached Pets.
//
// GET /users/{id}/pets
func (UnimplementedHandler) ListUserPets(ctx context.Context, params ListUserPetsParams) (r ListUserPetsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadAllTypes implements readAllTypes operation.
//
// Finds the AllTypes with the requested ID and returns it.
//
// GET /all-types/{id}
func (UnimplementedHandler) ReadAllTypes(ctx context.Context, params ReadAllTypesParams) (r ReadAllTypesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadCategory implements readCategory operation.
//
// Finds the Category with the requested ID and returns it.
//
// GET /categories/{id}
func (UnimplementedHandler) ReadCategory(ctx context.Context, params ReadCategoryParams) (r ReadCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadHat implements readHat operation.
//
// Finds the Hat with the requested ID and returns it.
//
// GET /hats/{id}
func (UnimplementedHandler) ReadHat(ctx context.Context, params ReadHatParams) (r ReadHatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadHatWearer implements readHatWearer operation.
//
// Find the attached User of the Hat with the given ID.
//
// GET /hats/{id}/wearer
func (UnimplementedHandler) ReadHatWearer(ctx context.Context, params ReadHatWearerParams) (r ReadHatWearerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadPet implements readPet operation.
//
// Finds the Pet with the requested ID and returns it.
//
// GET /pets/{id}
func (UnimplementedHandler) ReadPet(ctx context.Context, params ReadPetParams) (r ReadPetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadPetOwner implements readPetOwner operation.
//
// Find the attached User of the Pet with the given ID.
//
// GET /pets/{id}/owner
func (UnimplementedHandler) ReadPetOwner(ctx context.Context, params ReadPetOwnerParams) (r ReadPetOwnerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadUser implements readUser operation.
//
// Finds the User with the requested ID and returns it.
//
// GET /users/{id}
func (UnimplementedHandler) ReadUser(ctx context.Context, params ReadUserParams) (r ReadUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadUserBestFriend implements readUserBestFriend operation.
//
// Find the attached User of the User with the given ID.
//
// GET /users/{id}/best-friend
func (UnimplementedHandler) ReadUserBestFriend(ctx context.Context, params ReadUserBestFriendParams) (r ReadUserBestFriendRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadUserFavoriteHat implements readUserFavoriteHat operation.
//
// Find the attached Hat of the User with the given ID.
//
// GET /users/{id}/favorite-hat
func (UnimplementedHandler) ReadUserFavoriteHat(ctx context.Context, params ReadUserFavoriteHatParams) (r ReadUserFavoriteHatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateAllTypes implements updateAllTypes operation.
//
// Updates a AllTypes and persists changes to storage.
//
// PATCH /all-types/{id}
func (UnimplementedHandler) UpdateAllTypes(ctx context.Context, req *UpdateAllTypesReq, params UpdateAllTypesParams) (r UpdateAllTypesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateCategory implements updateCategory operation.
//
// Updates a Category and persists changes to storage.
//
// PATCH /categories/{id}
func (UnimplementedHandler) UpdateCategory(ctx context.Context, req *UpdateCategoryReq, params UpdateCategoryParams) (r UpdateCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateHat implements updateHat operation.
//
// Updates a Hat and persists changes to storage.
//
// PATCH /hats/{id}
func (UnimplementedHandler) UpdateHat(ctx context.Context, req *UpdateHatReq, params UpdateHatParams) (r UpdateHatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdatePet implements updatePet operation.
//
// Updates a Pet and persists changes to storage.
//
// PATCH /pets/{id}
func (UnimplementedHandler) UpdatePet(ctx context.Context, req *UpdatePetReq, params UpdatePetParams) (r UpdatePetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateUser implements updateUser operation.
//
// Updates a User and persists changes to storage.
//
// PATCH /users/{id}
func (UnimplementedHandler) UpdateUser(ctx context.Context, req *UpdateUserReq, params UpdateUserParams) (r UpdateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}
