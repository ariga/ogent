// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateCategory implements createCategory operation.
//
// Creates a new Category and persists it to storage.
//
// POST /categories
func (UnimplementedHandler) CreateCategory(ctx context.Context, req *CreateCategoryReq) (r CreateCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreatePet implements createPet operation.
//
// Creates a new Pet and persists it to storage.
//
// POST /pets
func (UnimplementedHandler) CreatePet(ctx context.Context, req *CreatePetReq) (r CreatePetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateUser implements createUser operation.
//
// Creates a new User and persists it to storage.
//
// POST /users
func (UnimplementedHandler) CreateUser(ctx context.Context, req *CreateUserReq) (r CreateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DBHealth implements DBHealth operation.
//
// Ping the database and report.
//
// GET /db-health
func (UnimplementedHandler) DBHealth(ctx context.Context) (r DBHealthRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteCategory implements deleteCategory operation.
//
// Deletes the Category with the requested ID.
//
// DELETE /categories/{id}
func (UnimplementedHandler) DeleteCategory(ctx context.Context, params DeleteCategoryParams) (r DeleteCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeletePet implements deletePet operation.
//
// Deletes the Pet with the requested ID.
//
// DELETE /pets/{id}
func (UnimplementedHandler) DeletePet(ctx context.Context, params DeletePetParams) (r DeletePetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteUser implements deleteUser operation.
//
// Deletes the User with the requested ID.
//
// DELETE /users/{id}
func (UnimplementedHandler) DeleteUser(ctx context.Context, params DeleteUserParams) (r DeleteUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListCategory implements listCategory operation.
//
// List Categories.
//
// GET /categories
func (UnimplementedHandler) ListCategory(ctx context.Context, params ListCategoryParams) (r ListCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListCategoryPets implements listCategoryPets operation.
//
// List attached Pets.
//
// GET /categories/{id}/pets
func (UnimplementedHandler) ListCategoryPets(ctx context.Context, params ListCategoryPetsParams) (r ListCategoryPetsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPet implements listPet operation.
//
// List Pets.
//
// GET /pets
func (UnimplementedHandler) ListPet(ctx context.Context, params ListPetParams) (r ListPetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPetCategories implements listPetCategories operation.
//
// List attached Categories.
//
// GET /pets/{id}/categories
func (UnimplementedHandler) ListPetCategories(ctx context.Context, params ListPetCategoriesParams) (r ListPetCategoriesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPetFriends implements listPetFriends operation.
//
// List attached Friends.
//
// GET /pets/{id}/friends
func (UnimplementedHandler) ListPetFriends(ctx context.Context, params ListPetFriendsParams) (r ListPetFriendsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUser implements listUser operation.
//
// List Users.
//
// GET /users
func (UnimplementedHandler) ListUser(ctx context.Context, params ListUserParams) (r ListUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserPets implements listUserPets operation.
//
// List attached Pets.
//
// GET /users/{id}/pets
func (UnimplementedHandler) ListUserPets(ctx context.Context, params ListUserPetsParams) (r ListUserPetsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadCategory implements readCategory operation.
//
// Finds the Category with the requested ID and returns it.
//
// GET /categories/{id}
func (UnimplementedHandler) ReadCategory(ctx context.Context, params ReadCategoryParams) (r ReadCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadPet implements readPet operation.
//
// Finds the Pet with the requested ID and returns it.
//
// GET /pets/{id}
func (UnimplementedHandler) ReadPet(ctx context.Context, params ReadPetParams) (r ReadPetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadPetOwner implements readPetOwner operation.
//
// Find the attached User of the Pet with the given ID.
//
// GET /pets/{id}/owner
func (UnimplementedHandler) ReadPetOwner(ctx context.Context, params ReadPetOwnerParams) (r ReadPetOwnerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadUser implements readUser operation.
//
// Finds the User with the requested ID and returns it.
//
// GET /users/{id}
func (UnimplementedHandler) ReadUser(ctx context.Context, params ReadUserParams) (r ReadUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateCategory implements updateCategory operation.
//
// Updates a Category and persists changes to storage.
//
// PATCH /categories/{id}
func (UnimplementedHandler) UpdateCategory(ctx context.Context, req *UpdateCategoryReq, params UpdateCategoryParams) (r UpdateCategoryRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdatePet implements updatePet operation.
//
// Updates a Pet and persists changes to storage.
//
// PATCH /pets/{id}
func (UnimplementedHandler) UpdatePet(ctx context.Context, req *UpdatePetReq, params UpdatePetParams) (r UpdatePetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateUser implements updateUser operation.
//
// Updates a User and persists changes to storage.
//
// PATCH /users/{id}
func (UnimplementedHandler) UpdateUser(ctx context.Context, req *UpdateUserReq, params UpdateUserParams) (r UpdateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}
